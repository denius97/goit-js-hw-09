{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAGMC,EAAOC,SAASC,cAAc,SAEpCF,EAAKG,iBAAiB,UAItB,SAAqBC,GACnBA,EAAIC,iBACJD,EAAIE,OAAOC,OAAOC,UAAW,EAC7B,IAAIC,EAAaC,OAAOV,EAAKW,MAAMC,OAC7BC,EAAOH,OAAOV,EAAKa,KAAKD,OACxBE,EAASJ,OAAOV,EAAKc,OAAOF,OAElC,GAAIE,EAAS,EAEX,YADAhB,EAAAiB,OAAOC,QAAS,sBAGlBC,WAAWC,EAAYT,EAAYA,EAAYI,EAAMC,E,IAEvD,IAAIK,EAAkB,EAEtB,SAASD,EAAWT,EAAYI,EAAMC,GA6DtC,IAAuBM,EAAUT,EACzBU,GADeD,EA5DrBD,GAAmB,EA4DYR,EA3DAF,EA4DzBY,EAAgBC,KAAKC,SAAW,GAC/B,IAAIC,SAAQ,SAACC,EAASC,GACvBL,EACFI,EAAQ,CAAEL,WAAUT,UAEpBe,EAAO,CAAEN,WAAUT,S,KAjEoBgB,KAAKC,GAAWC,MAAMC,GACjErB,GAAcI,EACd,IAAMkB,EAAUd,WAAWC,EAAYL,EAAMJ,EAAYI,EAAMC,GAC3DK,GAAmBL,IACrBkB,aAAaD,GACbZ,EAAkB,EAClBnB,EAAKO,OAAOC,UAAW,E,CAuC3B,SAASoB,EAAUK,G,IAAEb,EAAFa,EAAEb,SAAUT,EAAZsB,EAAYtB,MAC7BuB,QAAQC,IAAI,uBAAwCC,OAAfhB,EAAS,QAAYgB,OAANzB,EAAM,OAC1Db,EAAAiB,OAAOsB,QAAQ,uBAAwCD,OAAfhB,EAAS,QAAYgB,OAANzB,EAAM,MAAK,CAC9D2B,SAAO,G,CAIb,SAASR,EAASG,G,IAAEb,EAAFa,EAAEb,SAAUT,EAAZsB,EAAYtB,MAC5BuB,QAAQC,IAAI,sBAAuCC,OAAfhB,EAAS,QAAYgB,OAANzB,EAAM,OACzDb,EAAAiB,OAAOC,QAAQ,sBAAqCoB,OAAfhB,EAAS,QAAYgB,OAANzB,EAAM,MAAK,CAC7D2B,SAAS,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport 'notiflix/dist/notiflix-3.2.6.min.css';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', runPromises);\n\n// ==============================================\n\nfunction runPromises(evt) {\n  evt.preventDefault();\n  evt.target.button.disabled = true;\n  let firstDelay = Number(form.delay.value);\n  const step = Number(form.step.value);\n  const amount = Number(form.amount.value);\n\n  if (amount < 1) {\n    Notify.failure(`Select more then 0`);\n    return;\n  }\n  setTimeout(getPromise, firstDelay, firstDelay, step, amount);\n}\nlet currentPosition = 0;\n\nfunction getPromise(firstDelay, step, amount) {\n  currentPosition += 1;\n  createPromise(currentPosition, firstDelay).then(resolveFn).catch(rejectFn);\n  firstDelay += step;\n  const timeout = setTimeout(getPromise, step, firstDelay, step, amount);\n  if (currentPosition >= amount) {\n    clearTimeout(timeout);\n    currentPosition = 0;\n    form.button.disabled = false;\n  }\n}\n\n// ================================================\n\n// function runPromises(evt) {\n//   evt.preventDefault();\n//   let firstDelay = Number(form.delay.value);\n//   const step = Number(form.step.value);\n//   const amount = Number(form.amount.value);\n//   let currentPosition = 0;\n//   if (amount < 1) {\n//     Notify.failure(`Select more then 0`);\n//     return;\n//   }\n//   setTimeout(() => {\n//     currentPosition += 1;\n//     createPromise(currentPosition, firstDelay).then(resolveFn).catch(rejectFn);\n\n//     if (currentPosition >= amount) {\n//       return;\n//     }\n\n//     const interval = setInterval(() => {\n//       currentPosition += 1;\n//       firstDelay += step;\n//       createPromise(currentPosition, firstDelay)\n//         .then(resolveFn)\n//         .catch(rejectFn);\n//       if (currentPosition >= amount) {\n//         clearInterval(interval);\n//       }\n//     }, step);\n//   }, firstDelay);\n// }\n\n// ================================================\n\nfunction resolveFn({ position, delay }) {\n  console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, {\n    useIcon: false,\n  });\n}\n\nfunction rejectFn({ position, delay }) {\n  console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, {\n    useIcon: false,\n  });\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","addEventListener","evt","preventDefault","target","button","disabled","firstDelay","Number","delay","value","step","amount","Notify","failure","setTimeout","$ce04d3a99e08e73b$var$getPromise","$ce04d3a99e08e73b$var$currentPosition","position","shouldResolve","Math","random","Promise","resolve","reject","then","$ce04d3a99e08e73b$var$resolveFn","catch","$ce04d3a99e08e73b$var$rejectFn","timeout","clearTimeout","param","console","log","concat","success","useIcon"],"version":3,"file":"03-promises.ddc6b561.js.map"}